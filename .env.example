# ===================================
# SECURITY TEMPLATE - DO NOT COMMIT WITH REAL VALUES
# ===================================

# Supabase Configuration (Required)
# Get these values from your Supabase project settings > API
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# ===================================
# SERVER-SIDE CREDENTIALS (CRITICAL SECURITY)
# WARNING: These keys have FULL database access
# NEVER expose in client-side code or commit to git
# ===================================

# Supabase Service Configuration (Server-side only)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here
SUPABASE_ACCESS_TOKEN=your_supabase_access_token_here
SUPABASE_PROJECT_REF=your_project_reference_id

# ===================================
# EXTERNAL API KEYS (Optional Features)
# ===================================

# OpenAI API Key for AI features
VITE_OPENAI_API_KEY=your_openai_api_key_here

# Search API Configuration
BRAVE_API_KEY=your_brave_search_api_key_here

# Development & Monitoring
SENTRY_ORG=your_sentry_org
SENTRY_PROJECT=your_sentry_project
SENTRY_AUTH_TOKEN=your_sentry_auth_token

# GitHub Integration
GITHUB_PERSONAL_ACCESS_TOKEN=your_github_token_here

# Deno Deploy
DENO_DEPLOY_TOKEN=your_deno_deploy_token

# ===================================
# SECURITY INSTRUCTIONS
# ===================================

# 1. SETUP:
#    - Copy this file to .env: cp .env.example .env
#    - Fill in your actual values in .env (never in this .example file)
#    - Verify .env is in .gitignore

# 2. SECURITY LEVELS:
#    - VITE_* variables: Safe for client-side (public)
#    - SERVICE_ROLE_KEY: Server-only, FULL database access
#    - ACCESS_TOKEN: Admin operations, keep secure

# 3. KEY ROTATION:
#    - Rotate service keys monthly
#    - Monitor Supabase logs for suspicious activity
#    - Use different keys for development/staging/production

# 4. CLIENT-SIDE SECURITY:
#    - Only use ANON keys in frontend code
#    - Implement proper Row Level Security (RLS) policies
#    - Validate all user inputs server-side

# 5. EMERGENCY PROCEDURES:
#    - If credentials are compromised: Immediately rotate in Supabase dashboard
#    - Check git history for any committed secrets
#    - Review access logs for unauthorized usage